// <auto-generated />
using HungryPizza.Infraestructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HungryPizza.Infraestructure.Migrations
{
    [DbContext(typeof(HungryPizzaDbContext))]
    [Migration("20240704194447_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HungryPizza.Domain.Models.Pedido", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("HungryPizza.Domain.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PedidoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("HungryPizza.Domain.Models.Sabor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Sabores");
                });

            modelBuilder.Entity("PizzaSabor", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("SaboresId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "SaboresId");

                    b.HasIndex("SaboresId");

                    b.ToTable("PizzaSabores", (string)null);
                });

            modelBuilder.Entity("HungryPizza.Domain.Models.Pedido", b =>
                {
                    b.OwnsOne("HungryPizza.Domain.Models.EnderecoEntrega", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<string>("PedidoId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Telefone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("EnderecoEntrega");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("EnderecoEntrega")
                        .IsRequired();
                });

            modelBuilder.Entity("HungryPizza.Domain.Models.Pizza", b =>
                {
                    b.HasOne("HungryPizza.Domain.Models.Pedido", null)
                        .WithMany("Pizzas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaSabor", b =>
                {
                    b.HasOne("HungryPizza.Domain.Models.Pizza", null)
                        .WithMany()
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HungryPizza.Domain.Models.Sabor", null)
                        .WithMany()
                        .HasForeignKey("SaboresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HungryPizza.Domain.Models.Pedido", b =>
                {
                    b.Navigation("Pizzas");
                });
#pragma warning restore 612, 618
        }
    }
}
